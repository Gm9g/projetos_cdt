# jogo.py

import pygame
import random
import time
import os

# --- Configurações Iniciais ---
pygame.init()

# Dimensões da tela e cores
LARGURA, ALTURA = 800, 600
COR_FUNDO = (30, 30, 30)
COR_TEXTO = (255, 255, 255)

JANELA = pygame.display.set_mode((LARGURA, ALTURA))
pygame.display.set_caption("Jogo da Memória Divertido")
RELOGIO = pygame.time.Clock()

# Carregar imagens das cartas
caminho_imagens = "imagens"
nomes_imagens = [
    
      os.path.join(caminho_imagens, "internacional.png"),
    os.path.join(caminho_imagens, "fluminense.png"),
    os.path.join(caminho_imagens, "flamengo.png"),
    os.path.join(caminho_imagens, "sao_paulo.png"), # Atenção ao nome do arquivo
    os.path.join(caminho_imagens, "corinthians.png"),
    os.path.join(caminho_imagens, "palmeiras.png"),
]
VERSO_CARTA = pygame.image.load(os.path.join(caminho_imagens, "brasileirao.png"))
]
VERSO_CARTA = pygame.image.load(os.path.join(caminho_imagens, "verso.png"))

# Redimensionar imagens para o tamanho das cartas
TAMANHO_CARTA = (100, 100)
imagens = [pygame.transform.scale(pygame.image.load(img), TAMANHO_CARTA) for img in nomes_imagens]
VERSO_CARTA = pygame.transform.scale(VERSO_CARTA, TAMANHO_CARTA)

# Criar a lista de cartas com pares
todas_imagens = imagens * 2  # Cria pares de cada imagem
random.shuffle(todas_imagens)

# Classe para representar cada carta
class Carta:
    def __init__(self, imagem, x, y):
        self.imagem_frente = imagem
        self.imagem_verso = VERSO_CARTA
        self.rect = pygame.Rect(x, y, TAMANHO_CARTA[0], TAMANHO_CARTA[1])
        self.virada = False
        self.encontrada = False

    def desenhar(self, janela):
        """Desenha a carta na tela, mostrando a frente ou o verso."""
        if self.virada:
            janela.blit(self.imagem_frente, self.rect)
        else:
            janela.blit(self.imagem_verso, self.rect)

# --- Lógica do Jogo ---
def criar_cartas():
    """Cria e organiza as cartas na tela."""
    cartas = []
    margem_x, margem_y = 50, 50
    espacamento = 20
    cartas_por_linha = 4
    
    for i, img in enumerate(todas_imagens):
        linha = i // cartas_por_linha
        coluna = i % cartas_por_linha
        x = margem_x + coluna * (TAMANHO_CARTA[0] + espacamento)
        y = margem_y + linha * (TAMANHO_CARTA[1] + espacamento)
        cartas.append(Carta(img, x, y))
        
    return cartas

def desenhar_texto(texto, tamanho, cor, x, y):
    """Função para desenhar texto na tela."""
    fonte = pygame.font.Font(None, tamanho)
    superficie_texto = fonte.render(texto, True, cor)
    retangulo_texto = superficie_texto.get_rect(center=(x, y))
    JANELA.blit(superficie_texto, retangulo_texto)

# --- Loop Principal do Jogo ---
def game_loop():
    cartas = criar_cartas()
    viradas = []  # Armazena as cartas viradas na rodada atual
    pontos = 0
    jogo_rodando = True
    ultima_jogada = time.time()
    
    while jogo_rodando:
        for evento in pygame.event.get():
            if evento.type == pygame.QUIT:
                jogo_rodando = False
            
            if evento.type == pygame.MOUSEBUTTONDOWN and len(viradas) < 2:
                for carta in cartas:
                    if carta.rect.collidepoint(evento.pos) and not carta.virada and not carta.encontrada:
                        carta.virada = True
                        viradas.append(carta)

        # Lógica de virar as cartas
        if len(viradas) == 2:
            # Tempo de espera para o jogador ver as cartas
            if time.time() - ultima_jogada > 1:
                # Checar se as imagens são iguais
                if viradas[0].imagem_frente == viradas[1].imagem_frente:
                    print("Parabéns! Você fez um par!")
                    pontos += 10
                    # Marcar cartas como encontradas
                    viradas[0].encontrada = True
                    viradas[1].encontrada = True
                else:
                    print("Ops! Cartas diferentes.")
                    # Virar as cartas de volta
                    viradas[0].virada = False
                    viradas[1].virada = False
                
                # Limpar a lista de viradas para a próxima rodada
                viradas = []
                ultima_jogada = time.time()
                
        # Verificar se o jogo acabou
        cartas_encontradas = sum(1 for carta in cartas if carta.encontrada)
        if cartas_encontradas == len(cartas):
            JANELA.fill(COR_FUNDO)
            desenhar_texto("Fim de Jogo!", 80, COR_TEXTO, LARGURA // 2, ALTURA // 2 - 50)
            desenhar_texto(f"Sua Pontuação Final: {pontos}", 40, COR_TEXTO, LARGURA // 2, ALTURA // 2 + 20)
            pygame.display.flip()
            time.sleep(5)
            jogo_rodando = False

        # Desenhar tudo na tela
        JANELA.fill(COR_FUNDO)
        for carta in cartas:
            if not carta.encontrada:
                carta.desenhar(JANELA)
        
        desenhar_texto(f"Pontuação: {pontos}", 30, COR_TEXTO, LARGURA - 100, 30)

        pygame.display.flip()
        RELOGIO.tick(60)

    pygame.quit()

if __name__ == "__main__":
    game_loop()
